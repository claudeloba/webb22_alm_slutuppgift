name: CI/CD pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

env:
  cache-name: cache-node-modules

jobs:
  lint-code:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      NODE_ENV: "development"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Cache NPM Dependencies
        uses: actions/cache@v3.3.2
        with:
          path: ~/.npm
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Dependencies
        run: npm install
      - name: Run Lint
        run: npm run lint

  build-and-publish-docker-image:
    needs: lint-code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Cache Docker layers
        uses: actions/cache@v3.3.2
        with:
          path: /tmp/docker-layers
          key: ${{ runner.os }}-docker-layers-${{ github.sha }}
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/webb22claude:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository }}/webb22claude:${{ github.sha }}

  run-tests-in-container:
    needs: build-and-publish-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run the Docker container in test mode
        run: |
          docker run -d \
            --name test-container \
            -e NODE_ENV=test \
            -p 5050:5050 \
            ghcr.io/${{ github.repository }}/webb22claude:${{ github.sha }}

      - name: Run Integration & Unit Tests in Container
        run: docker exec -e NODE_ENV=test test-container npm run coverage

  fake-deploy:
    needs: run-tests-in-container
    runs-on: ubuntu-latest
    env:
      NODE_ENV: "production"
      DEPLOY_PASSWORD: ${{ secrets.MY_SECRET }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Fake Deploy
        run: |
          echo "Docker image: ghcr.io/${{ github.repository }}/webb22claude:v1"
          echo "NODE_ENV is $NODE_ENV"
          echo "Deploy password is $DEPLOY_PASSWORD"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "now deploying to production"
          else
            echo "now deploying branch: $(git symbolic-ref --short HEAD) to the test server"
          fi
